<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<security:global-method-security pre-post-annotations="enabled"/>	
	
	<security:http pattern="/" security="none" />
	<!--  <security:http pattern="/resources/**" security="none" /> -->
	<security:http pattern="/signup" security="none" />
	<security:http use-expressions="true" auto-config='true' disable-url-rewriting="false">
	<security:csrf disabled="true"/>
	<!-- Need to redirect exception for web authorization -->
<!-- 	<security:access-denied-handler error-page="/error-forbidden" />
	 -->
	 <!-- <security:intercept-url pattern="/movie/add" access="hasRole('ROLE_ADMIN')" />  --> 	
	 <security:intercept-url pattern="/addArticle" access="hasRole('ROLE_ADMIN')" />  
	 <security:intercept-url pattern="/resources/**"  access="none" />
	 <security:intercept-url pattern="/login" access="permitAll" />
	 <security:intercept-url pattern="/loginfailed" access="permitAll" />
 		
 		<security:form-login
 		
 		login-page="/login" 
		authentication-failure-url="/loginfailed"
		username-parameter="j_username" 
		password-parameter="j_password"
		login-processing-url="/j_spring_security_check"
		default-target-url="/blog" />
        <security:logout logout-url="/j_spring_security_logout"/>
        
	</security:http>
	

 <security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user u where u.username=?"
				authorities-by-username-query="select username, authority from user u where u.username =?" />
		</security:authentication-provider>
	</security:authentication-manager>


	<!--  <security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="plaintext" />
			<security:user-service>
				<security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
				<security:user name="guest" password="guest" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>  -->
</beans>
